<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>
<mapper namespace='com.example.marketkurly_clone.src.user.UserMapper'>

    <select id="selectMember" parameterType="int" resultType="com.example.marketkurly_clone.src.user.model.GetUserRes">
        select *
        from User
        where user_idx = #{user_idx};
    </select>

    <select id="getIdx" resultType="int">
        select last_insert_id();
    </select>

    <insert id="joinUser" parameterType="com.example.marketkurly_clone.src.user.model.PostUserReq">
        insert into User(id, pwd, email, phone, birth, sex, name)
        values (#{id}, #{pwd}, #{email}, #{phone}, #{birth}, #{sex}, #{name})
    </insert>

    <insert id="joinUser_address" parameterType="com.example.marketkurly_clone.src.user.model.PostUserReq">
        insert into Address(address_main, address_desc, default_yn, recevied_name, recevied_phone, user_idx, is_like)
        values (#{address_main}, #{address_desc}, 'Y', #{name}, #{phone}, last_insert_id(), 'Y')
    </insert>
    <select id="get_pwd" parameterType="com.example.marketkurly_clone.src.user.model.PostLoginReq"
            resultType="com.example.marketkurly_clone.src.user.model.User">
        select user_idx,
               id,
               pwd,
               name,
               email,
               phone,
               sex,
               birth
        from User
        where id = #{id}
          and delete_yn = 'N';
    </select>
    <select id="checkPhone" parameterType="com.example.marketkurly_clone.src.user.model.PostLoginReq"
            resultType="int">
        select exists(select phone from User where
        <if test="phone !=null">
            phone = #{phone} and delete_yn = 'N'
        </if>
        <if test="id !=null">
            id = #{id} and delete_yn = 'N'
        </if>
        <if test="email !=null">
            email = #{email} and delete_yn = 'N'
        </if>
        )

    </select>


    <select id="getUserCartList" parameterType="int"
            resultType="com.example.marketkurly_clone.src.user.model.GetUserCartRes">
        select J1.product_idx,
               J1.url,
               J1.name,
               J2.name                                                                        as product_desc,
               C.product_amount,
               case when J2.`index` is null then J1.price else J2.origin_price end            as price,
               case when J2.`index` is null then J1.discount_price else J2.discount_price end as discount_price,
               J2.index                                                                   as idx,
               J1.type
        from Cart C
                 left join (select P.product_idx, PI.url, P.name, P.price, P.discount_price,P.type
                            from Product P

                                     left join ProductImage PI on P.product_idx = PI.product_idx) J1
                           on J1.product_idx = C.product_idx
                 left join (select * from ProductDetailList) J2 on J2.`index` = C.product_detail_idx
        where C.user_idx = #{user_idx}
        ;


    </select>
    <update id="updatedefult_to_n" parameterType="int">
        update Address
        set default_yn ='N'
        where user_idx = #{user_idx}
          and default_yn = 'Y'
    </update>
    <insert id="CreateUserAddress" parameterType="com.example.marketkurly_clone.src.user.model.PostUserAddressReq">
        insert into Address(address_main, address_desc, default_yn, recevied_name, recevied_phone, user_idx)
        values (#{address_main}, #{address_desc}, #{default_yn}, '', '', #{user_idx})
    </insert>

    <select id="GetUserAddress" parameterType="int"
            resultType="com.example.marketkurly_clone.src.user.model.GetUserAddressRes">
        select address_idx, address_main, address_desc, default_yn, recevied_name, recevied_phone,is_like
        from Address
        where user_idx = #{user_idx}
    </select>
    <update id="updataUserAddress" parameterType="com.example.marketkurly_clone.src.user.model.PatchUserAddressReq">

        update Address
        set default_yn     = #{default_yn},
            address_desc   = #{address_desc},
            recevied_name  = #{recevied_name},
            recevied_phone = #{recevied_phone}
        where address_idx = #{address_idx}
          and user_idx = #{user_idx}

    </update>

    <select id="CheckUserFavrotite" parameterType="int" resultType="int">
        select exists(select * from Favorite where user_idx = #{userIdxByJwt} and product_idx = #{product_idx});
    </select>
    <select id="isDeleteOfFavorite" parameterType="int" resultType="int">
        select case when delete_yn = 'Y' then 1 else 0 end
        from Favorite
        where user_idx = #{userIdxByJwt}
          and product_idx = #{product_idx};
    </select>

    <update id="UpdateCreateUserFavorite" parameterType="int">
        update Favorite
        set delete_yn = 'N'
        where user_idx = #{userIdxByJwt}
          and product_idx = #{product_idx};

    </update>

    <update id="UpdateDeleteUserFavorite" parameterType="int">

        update Favorite
        set delete_yn = 'Y'
        where user_idx = #{userIdxByJwt}
          and product_idx = #{product_idx};
    </update>

    <insert id="CreateUserFavorite" parameterType="int">
        insert into Favorite(user_idx, product_idx)
        values (#{userIdxByJwt}, #{product_idx})

    </insert>

    <select id="getUserLikeAddress" parameterType="int"
            resultType="com.example.marketkurly_clone.src.user.model.GetUserLikeAddressRes">
        select address_main, address_desc, default_yn, recevied_name, recevied_phone,is_like
        from Address
        where user_idx = #{user_idx} and is_like='Y'
    </select>

    <update id="ChangeLikeToBasicAddress" parameterType="int">
        update Address Set is_like='N' where user_idx = #{user_idx} and is_like='Y'

    </update>

    <update id="ChangeBasicToLikeAddress" parameterType="int">
        update Address Set is_like='Y' where user_idx = #{user_idx} and address_idx=#{address_idx}
    </update>

    <delete id="DeleteUserAddress" parameterType="int">
        delete from Address where user_idx= #{user_idx} and address_idx = #{address_idx}
    </delete>
</mapper>